@use "sass:map";
@use "sass:color";
@use "@catppuccin/palette/scss/catppuccin";

// ---------------------------------------------
// primitives color (custom catppuccin variant)
// ---------------------------------------------

$color_names: (
  // "rosewater",
  // "flamingo",
  // "pink",
  // "mauve",
  "red",
  // "maroon",
  "peach",
  // "yellow",
  "green",
  // "teal",
  // "sky",
  // "sapphire",
  "blue",
  // "lavender",
);

$black: map.get(catppuccin.$palette, "mocha", "crust");
$white: map.get(catppuccin.$palette, "latte", "base");

$mocha_gray: map.get(catppuccin.$palette, "mocha", "overlay1");
$latte_gray: map.get(catppuccin.$palette, "latte", "overlay1");

@mixin generate_color($name, $color, $forground, $background) {
  --color-#{$name}-50: #{color.mix($forground, $color, 90%)};
  --color-#{$name}-100: #{color.mix($forground, $color, 80%)};
  --color-#{$name}-200: #{color.mix($forground, $color, 60%)};
  --color-#{$name}-300: #{color.mix($forground, $color, 40%)};
  --color-#{$name}-400: #{color.mix($forground, $color, 20%)};
  --color-#{$name}-500: #{$color};
  --color-#{$name}-600: #{color.mix($background, $color, 20%)};
  --color-#{$name}-700: #{color.mix($background, $color, 40%)};
  --color-#{$name}-800: #{color.mix($background, $color, 60%)};
  --color-#{$name}-900: #{color.mix($background, $color, 80%)};
  --color-#{$name}-950: #{color.mix($background, $color, 90%)};
}

@mixin latte {
  $palette: map.get(catppuccin.$palette, "latte");

  // mocha gray 800
  $forground: color.mix($black, $mocha_gray, 60%);
  $background: $white;

  --color-black: #{$black};
  --color-white: #{$white};

  // gray
  --color-gray-0: #{$forground};

  @include generate_color("gray", $latte_gray, $forground, $background);

  --color-gray-1000: #{$background};

  // colors
  @each $color_name in $color_names {
    $color: map.get($palette, $color_name);

    @include generate_color($color_name, $color, $forground, $background);

    --color-#{$color_name}-A500: #{color.to-space(color.adjust(color.to-space($color, lch), $hue: 2, $lightness: 10%), rgb)};
  }
}

@mixin mocha {
  $palette: map.get(catppuccin.$palette, "mocha");

  // latte gray 800
  $forground: color.mix($white, $latte_gray, 60%);
  $background: $black;

  --color-black: #{$black};
  --color-white: #{$white};

  // gray
  --color-gray-0: #{$forground};

  @include generate_color("gray", $mocha_gray, $forground, $background);

  --color-gray-1000: #{$background};

  // colors
  @each $color_name in $color_names {
    $color: map.get($palette, $color_name);

    @include generate_color($color_name, $color, $forground, $background);

    --color-#{$color_name}-A500: #{color.to-space(color.adjust(color.to-space($color, lch), $hue: 2, $chroma: 8, $lightness: -10%), rgb)};
  }
}

// ---------------------------------------------
// bindings
// ---------------------------------------------

@mixin bind_alias($target_name, $source_name) {
  --color-#{$target_name}-50: var(--color-#{$source_name}-50);
  --color-#{$target_name}-100: var(--color-#{$source_name}-100);
  --color-#{$target_name}-200: var(--color-#{$source_name}-200);
  --color-#{$target_name}-300: var(--color-#{$source_name}-300);
  --color-#{$target_name}-400: var(--color-#{$source_name}-400);
  --color-#{$target_name}-500: var(--color-#{$source_name}-500);
  --color-#{$target_name}-600: var(--color-#{$source_name}-600);
  --color-#{$target_name}-700: var(--color-#{$source_name}-700);
  --color-#{$target_name}-800: var(--color-#{$source_name}-800);
  --color-#{$target_name}-900: var(--color-#{$source_name}-900);
  --color-#{$target_name}-950: var(--color-#{$source_name}-950);
  --color-#{$target_name}-default: var(--color-#{$source_name}-500);

  @if $source_name != "gray" {
    --color-#{$target_name}-A500: var(--color-#{$source_name}-A500);
  }
}

// ---------------------------------------------
// generate classes
// ---------------------------------------------

%ui-light,
.ui-light {
  @include latte;
}

%ui-dark,
.ui-dark {
  @include mocha;
}

@each $color_name in $color_names {

  %#{$color_name},
  .#{$color_name} {
    @include bind_alias("primary", $color_name);
  }
}

// ---------------------------------------------
// bind defaults
// ---------------------------------------------

:root {
  @extend %ui-light;
  @extend %blue;

  // colors
  @include bind_alias("info", "blue");
  @include bind_alias("success", "green");
  @include bind_alias("warning", "peach");
  @include bind_alias("danger", "red");

  // misc
  --surface-crust: var(--color-gray-1000);
  --surface-mantle: var(--color-gray-950);
  --surface-base: var(--color-gray-900);
  --color-text: var(--color-gray-0);
}
